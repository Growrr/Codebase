//- Components Intro

p.lead.
  Codebase components are common HTML/CSS patterns. Some have added functionality from a small jQuery script (e.g. popover, slideshow, tabs).

p.initial-icon.bl--4px-solid.b--teal-darken-1.p--3u.bg--teal-lighten-2.
  <i class="fa fa-info-circle text--teal-darken-1"></i> Components examples have been built first as Pug mixins, in order to be useful in rapid prototyping or style guide composition.

h3 Component Mixins and Class Builders

p.
  Almost everything in Codebase, including all components, were created first as a set of SCSS mixins. These were then combined and included in their respective <b>class builder</b> mixins. And these class builders are under the control of a set of #[code true !default] variables in <a href='codebase/sass/02_default-variables/_default-variables.sass'> codebase/sass/02_default-variables/_default-variables.sass</a>.

p.
  So you can toggle component classes for inclusion (true) or exclusion (false) in your advanced theme build by overriding these defaults.

p.
  This may be useful for reducing your final CSS file size (by exclusing what you don't need). And if you are combining various frameworks with similar named CSS classes, you can duplicate and edit the Codebase class names, giving them a unique (e.g. prefixed) namespace to avoid clashes.

h3 Components and Media Queries

p.
  Except for the navbar (which appears as a navbar at widths above the navbar breakpoint, and collapsed for smaller screens), Codebase components do not involve media queries. If you require components to have different behavior at different screen widths, you can include the component mixins within media queries in your own theme.

p.
  For example, you may have a tab-system appear as an accordion for small screens down and as side-tabs on medium screens up.

h3 Component Styling

p.
  Codebase components attempt to be as minimally styled as possible. The styling is based on a common set of <b>decoration variables</b>, and is built into the Codebase component mixins.

p.
  However, even this minimal styling in the components can be switched off by overriding a set of <b>Component Decoration</b> <code>true !default</code> variables in <a href='codebase/sass/02_default-variables/_default-variables.sass'> codebase/sass/02_default-variables/_default-variables.sass</a>. With these set to false, Codebase components are as "style agnostic" as possible, so that you can style them any way you want without CSS bloat.

p.
  The Codebase component mixins can easily be included and combined and re-styled in your own theme (see
  <a href='getting-started.html#advanced-setup')>Getting Started: Advanced Setup</a>).

p.
  (These variables are also used in the <a href='decoration.html'>decoration classes</a>.)

h3 Reset Overlay

p.
  Several Codebase components (e.g. dropdowns, navbars, popovers and off-canvas sidebar require a "click outside to dismiss" function. This is accomplished by raising a full-page panel (called a reset overlay) to cover the page, and to raise the component to a z-index higher than the panel.

p.
  The reset overlay serves as a "button" covering the entire page (except for the active component, which is in ffont of the overlay). All components requiring the reset overlay have reset-functions which are triggered by clicking/tapping the reset overlay.</p>

p.
  Usually the reset overlay is transparent. But for <a  href="#components-popovers">popovers</a> it is rendered semi-transparent black.
