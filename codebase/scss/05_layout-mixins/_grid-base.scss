// LAYOUT MIXINS: GRID BASE
// ========================
// File: codebase/scss/05_layout-mixins/_grid-base.scss

// Grid Container
// --------------
// For Classic and Semantic grids

@mixin grid {
  max-width: $grid-max-width;
  margin-right: auto;
  margin-left: auto;
  @include clearfix;
  -webkit-backface-visibility: hidden;
}

// Grid with gutter between columns
// --------------------------------
// Include `grid--gutter` in your GRID container class, not in each col.

@mixin grid--gutter {
  > * {
    padding-right: ($column-gutter-width--xs / 2);
    padding-left: ($column-gutter-width--xs / 2);
    @include break__sm--up {
      padding-right: $column-gutter-width--sm / 2;
      padding-left: $column-gutter-width--sm / 2;
    }
    @include break__md--up {
      padding-right: $column-gutter-width--md / 2;
      padding-left: $column-gutter-width--md / 2;
    }
    @include break__lg--up {
      padding-right: $column-gutter-width--lg / 2;
      padding-left: $column-gutter-width--lg / 2;
    }
  }
}

// Nested Grid
// -----------
// Only include `grid--nested` on a NESTED grid container IF the parent grid has a gutter.
@mixin grid--nested {
  margin-right: -($column-gutter-width--xs / 2);
  margin-left: -($column-gutter-width--xs / 2);
  @include break__sm--up {
    margin-right: -($column-gutter-width--sm / 2);
    margin-left: -($column-gutter-width--sm / 2);
  }
  @include break__md--up {
    margin-right: -($column-gutter-width--md / 2);
    margin-left: -($column-gutter-width--md / 2);
  }
  @include break__lg--up {
    margin-right: -($column-gutter-width--lg / 2);
    margin-left: -($column-gutter-width--lg / 2);
  }
}

// Column Base
// Used by Classic, Semantic and Flexbox Grid Systems

@mixin col {
  position: relative;
  width: 100%;
}
